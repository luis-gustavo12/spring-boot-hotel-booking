plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0' // Use stable if possible
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'com.github.projects'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	// Only add these if you use milestone/snapshot dependencies
	// maven { url 'https://repo.spring.io/milestone' }
	// maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.auth0:java-jwt:4.5.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = System.getenv('FLYWAY_URL')
	user = System.getenv('FLYWAY_USER')
	password = System.getenv('FLYWAY_PASSWORD')
	locations = ['filesystem:src/main/resources/db/migration']
}